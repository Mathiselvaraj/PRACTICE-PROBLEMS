class Solution {
    public double findMedianSortedArrays(int[] nums1, int[] nums2) {
        int m=nums1.length;
        int n=nums2.length;
        int t=m+n;
        int j=m;
        int a[]=new int[t];
        for(int i=0;i<m;i++){
               a[i]=nums1[i];
        }if(j<t){
               for(int i=0;i<n;i++){
               a[j]=nums2[i];
               j++;
        }
        }Arrays.sort(a);
       
        double median=0;
        if(t%2!=0){
           
            median=a[t/2];
        }else if(t%2==0){
           median=(a[t/2]+a[(t/2)-1])/2.0;
        }
        return median;
    }
}




/*Given two sorted arrays nums1 and nums2 of size m and n respectively, return the median of the two sorted arrays.

The overall run time complexity should be O(log (m+n)).

 

Example 1:

Input: nums1 = [1,3], nums2 = [2]
Output: 2.00000
Explanation: merged array = [1,2,3] and median is 2.
Example 2:

Input: nums1 = [1,2], nums2 = [3,4]
Output: 2.50000
Explanation: merged array = [1,2,3,4] and median is (2 + 3) / 2 = 2.5.
LEETCODE 4*/
